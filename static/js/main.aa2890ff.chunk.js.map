{"version":3,"sources":["components/Home/useLocalStorage.js","components/Chat/hooks.js","components/Home/hooks.js","components/Home/index.js","components/Chat/Loaders.js","components/Chat/FormDialoguesComponent.js","components/Chat/SignOutComponent.js","components/Chat/SidebarComponent.js","components/Chat/TopBarComponent.js","components/Chat/SnackbarComponent.js","components/Chat/ChatBodyComponent.js","components/Chat/RightSideBar.js","components/Chat/MainChatComponent.js","components/Chat/index.js","components/Routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","req1","req2","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Hooks","loading","setLoading","useEffect","setTimeout","setHeaders","setUserID","password","setPassword","secondPassword","setSecondPassword","email","setEmail","isRegistering","setIsRegistering","route","setRoute","isLoggedIn","signedOut","setUserStatus","passwordsDoNotMatch","invalidEmailFormat","emailIsEmpty","passwordIsEmpty","passwordTooShort","validInfo","setValidInfo","successful","failed","isRegister","setIsRegister","isLogin","setIsLogin","registerUser","axios","url","data","headers","method","then","resetUserInput","catch","transition","logIn","e","preventDefault","includes","res","id","register","length","theme","createTheme","SignIn","useHooks","to","className","color","size","up","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","Typography","variant","onClick","noValidate","mt","TextField","onChange","target","margin","fullWidth","label","type","autoFocus","Button","mb","backgroundColor","Grid","container","Link","style","cursor","align","Date","getFullYear","Loaders","userID","users","setUsers","channels","setChannels","message","setMessage","allMessagesRetrieved","setAllMessagesRetrieved","mobileOpen","setMobileOpen","searchResults","setSearchResults","selectedUser","setSelectedUser","channelMembers","setChannelMembers","home","channel","usersDisplayed","setUsersDisplayed","userStatus","withoutCurrentUser","filter","user","uid","success","isCreateChannel","setIsCreateChannel","userInviteError","setUserInviteError","openChannel","setOpenChannel","openUsers","setOpenUsers","selectedChannel","setSelectedChannel","openSB","vertical","horizontal","stateSB","setStateSB","client","expiry","getCurrentTime","retrieveAllMessagesInAChannel","retrieveAllMessagesWithUser","userData","currentTime","currentDate","currentDateAndTime","setCurrentDateAndTime","d","weekday","Array","setInterval","time","toLocaleTimeString","hour","minute","currentDay","getDay","handleClickOpenChannel","inviteUserToAChannel","userEmail","handleClose","setValueFromForm","extractedId","member_id","errors","createNewChannelWithUser","channelName","name","user_ids","join","handleClickOpenUsers","handleDrawerToggle","createMessageInAChannel","receiver_id","receiver_class","body","intervalRetrieveMessages","clearTimeout","returnToHome","sortByEmail","val","sortedUsers","createDirectMessageToAUser","intervalRetrieveMessagesWithUser","retrieveChannelUsers","channel_members","map","user_id","filteredChannelMembers","signOut","FormDialoguesComponent","open","dialogTitleText","setGetChannel","setGetEmail","valueFromForm","Dialog","onClose","DialogTitle","pb","DialogContent","List","ListItemButton","pl","ListItemText","primary","DialogActions","SignOutComponent","Avatar","toString","marginRight","toUpperCase","SidebarComponent","openForInviteUser","setOpenForInviteUser","openForSendDirectMessage","setOpenForSendDirectMessage","React","setOpen","Toolbar","justifyContent","fontSize","mr","disablePadding","handleClickOpen","TopBarComponent","drawerWidth","AppBar","position","width","sm","ml","IconButton","edge","paddingRight","SnackBarComponent","messageSB","Snackbar","autoHideDuration","anchorOrigin","ChatBodyComponent","getChannel","getEmail","padding","sender","slice","split","moment","created_at","fromNow","autoComplete","onSubmit","RightSideBar","Drawer","flexShrink","boxSizing","anchor","Divider","ListSubheader","overflowX","ListItem","MainChatComponent","isAChannelSelected","ModalProps","keepMounted","xs","Index","Routes","exact","path","Home","Chat","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa2890ff.chunk.js","sourcesContent":["import {useState} from 'react';\n\n// Hook\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = (value) => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n    return [storedValue, setValue];\n  }\n\n  export default useLocalStorage;","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport useLocalStorage from \"../Home/useLocalStorage.js\";\n\nvar req1;\nvar req2;\n\nconst Hooks = () => {\n  const [headers] = useLocalStorage(\"headers\", []);\n  const [userID] = useLocalStorage(\"userID\", []);\n  const [users, setUsers] = useState([]);\n  const [channels, setChannels] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [allMessagesRetrieved, setAllMessagesRetrieved] = useState([]);\n  const [mobileOpen, setMobileOpen] = useState(false);  \n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedUser, setSelectedUser] = useState([]);\n  const [channelMembers, setChannelMembers] = useState([])\n  const [usersDisplayed, setUsersDisplayed] = useState({home: true, channel: false})  \n  const [userStatus, setUserStatus] = useLocalStorage('status', {\n    isLoggedIn: false,\n    signedOut: false,\n  })\n  \n  const withoutCurrentUser = users.filter(\n    (user) => !user.email.includes(headers.uid)\n  );\n  const [isCreateChannel, setIsCreateChannel] = useState({\n    success: false,\n    failed: false,\n  });\n\n  const [userInviteError, setUserInviteError] = useState(\"\");\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const [openChannel, setOpenChannel] = useState(false);\n  const [openUsers, setOpenUsers] = useState(false);\n\n  const handleClickOpenChannel = () => {\n    setOpenChannel(!openChannel);\n  };\n\n  const handleClickOpenUsers = () => {\n    setOpenUsers(!openUsers);\n  };\n\n  const [selectedChannel, setSelectedChannel] = useState([]);\n\n  const [stateSB, setStateSB] = useState({\n    openSB: false,\n    vertical: \"top\",\n    horizontal: \"center\"\n  });\n\n\n// stores all the email in a channel\n  // useEffect(() => {\n  //   collectChannelEmailsArray(channelUsersId)\n  // }, [channelUsersId]);\n\n  // useEffect(() => {\n  //   collectChannelEmails(channelEmailsArray);\n  //   console.log(channelEmailsArray)\n  // }, [channelEmailsArray]);\n\n  // useEffect(() => {\n  //   console.log(channelEmails)\n  // }, [channelEmails]);\n  \n\n  useEffect(() => {\n    \n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n\n  useEffect(() => {\n    const getAllUsers = () => {\n      axios({\n        url: \"https://slackapi.avionschool.com/api/v1/users\",\n        data: {},\n        method: \"GET\",\n        headers: {\n          \"access-token\": headers[\"access-token\"],\n          client: headers.client,\n          expiry: headers.expiry,\n          uid: headers.uid,\n        },\n      })\n        .then((res) => {setUsers(res.data.data)})\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n    getAllUsers();\n\n    const retrieveChannels = () => {\n      axios({\n        url: \"https://slackapi.avionschool.com/api/v1/channels\",\n        data: {},\n        method: \"GET\",\n        headers: {\n          \"access-token\": headers[\"access-token\"],\n          client: headers.client,\n          expiry: headers.expiry,\n          uid: headers.uid,\n        },\n      })\n        .then((res) => setChannels(res.data.data))\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n    retrieveChannels();\n    getCurrentTime();\n  }, [headers]);\n\n  const retrieveChannels = () => {\n    axios({\n      url: \"https://slackapi.avionschool.com/api/v1/channels\",\n      data: {},\n      method: \"GET\",\n      headers: {\n        \"access-token\": headers[\"access-token\"],\n        client: headers.client,\n        expiry: headers.expiry,\n        uid: headers.uid,\n      },\n    })\n      .then((res) => setChannels(res.data.data))\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const intervalRetrieveMessages = (id) => {\n    clearTimeout(req1);\n    clearTimeout(req2);    \n    setSelectedUser([]);\n    retrieveAllMessagesInAChannel(id);  \n      req1 = setInterval(() => {\n        retrieveAllMessagesInAChannel(id);\n      }, 1500);  \n  };\n\n  const retrieveAllMessagesInAChannel = (id) => {\n    axios({\n      url: `https://slackapi.avionschool.com/api/v1/messages?receiver_id=${id}&receiver_class=Channel`,\n      data: {},\n      method: \"GET\",\n      headers: {\n        \"access-token\": headers[\"access-token\"],\n        expiry: headers.expiry,\n        client: headers.client,\n        uid: headers.uid,\n      },\n    })\n      .then((res) => {setAllMessagesRetrieved(res.data.data); })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n\n    //INVITE USER TO A CHANNEL\n  const inviteUserToAChannel = (userEmail, handleClose, setValueFromForm) => {\n    const extractedId = users.filter(user=>user.email===userEmail) \n\n    axios({\n      url: \"https://slackapi.avionschool.com/api/v1/channel/add_member\",\n      data: {\n        id: `${selectedChannel.id}`,\n        member_id: `${extractedId[0]?.id}`,\n      },\n      method: \"POST\",\n      headers: {\n        \"access-token\": headers[\"access-token\"],\n        expiry: headers.expiry,\n        uid: headers.uid,\n        client: headers.client,\n      },\n    })\n      .then((res) => {\n        if (res.data.errors) {\n          setUserInviteError(res.data.errors);            \n        } else {\n          setStateSB({ ...stateSB, openSB: true });          \n          setValueFromForm('')\n          setUserInviteError(\"\");\n          handleClose();\n        }\n        console.log(res);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n\n  //CREATE NEW CHANNEL\n   const createNewChannelWithUser = (channelName, handleClose, setValueFromForm) => {\n    axios({\n      url: \"https://slackapi.avionschool.com/api/v1/channels\",\n      data: {\n        name: `${channelName}`,\n        user_ids: [userID],\n      },\n      method: \"POST\",\n      headers: {\n        \"access-token\": headers[\"access-token\"],\n        expiry: headers.expiry,\n        client: headers.client,\n        uid: headers.uid,\n      },\n    })\n      .then((res) => {\n        retrieveChannels();\n        if (res.data.data?.id) {\n          setStateSB({ ...stateSB, openSB: true });                \n          handleClose();\n          setValueFromForm(\"\");\n          \n        } else {\n          const errors = res.data.errors;\n          setIsCreateChannel({ failed: [...errors].join(\". \") })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const createMessageInAChannel = (message) => {\n    axios({\n      url: `https://slackapi.avionschool.com/api/v1/messages`,\n      data: {\n        receiver_id: `${selectedChannel.id}`,\n        receiver_class: \"Channel\",\n        body: `${message}`,\n      },\n      method: \"POST\",\n      headers: {\n        \"access-token\": headers[\"access-token\"],\n        expiry: headers.expiry,\n        client: headers.client,\n        uid: headers.uid,\n      },\n    })\n      .then(retrieveAllMessagesInAChannel(selectedChannel.id))\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const retrieveAllMessagesWithUser = (userData) => {\n    axios({\n      url: `https://slackapi.avionschool.com/api/v1/messages?receiver_id=${userData.id}&receiver_class=User`,\n      method: \"GET\",\n      headers: {\n        \"access-token\": headers[\"access-token\"],\n        expiry: headers.expiry,\n        client: headers.client,\n        uid: headers.uid,\n      },\n    })\n      .then((res) => {\n        setAllMessagesRetrieved(res.data.data)\n        // console.log(res);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const intervalRetrieveMessagesWithUser = (userData) => {\n    clearTimeout(req1);\n    clearTimeout(req2);\n    setSelectedChannel([]);\n    setSelectedUser(userData);\n    retrieveAllMessagesWithUser(userData);\n    setSearchResults([]);\n         req2 = setInterval(() => {\n        retrieveAllMessagesWithUser(userData);\n      }, 1500);  \n  };\n\n  const createDirectMessageToAUser = (message) => {\n    axios({\n      url: `https://slackapi.avionschool.com/api/v1/messages`,\n      data: {\n        receiver_id: `${selectedUser.id}`,\n        receiver_class: \"User\",\n        body: `${message}`,\n      },\n      method: \"POST\",\n      headers: {\n        \"access-token\": headers[\"access-token\"],\n        expiry: headers.expiry,\n        client: headers.client,\n        uid: headers.uid,\n      },\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n\n  const retrieveChannelUsers = (id) => {\n\n    axios({\n      url: `https://slackapi.avionschool.com/api/v1/channels/${id}`,\n      method: \"GET\",\n      headers: {\n        \"access-token\": headers[\"access-token\"],\n        expiry: headers.expiry,\n        client: headers.client,\n        uid: headers.uid,\n      },\n    })\n      .then((res) => {        \n        const channelMembers = res.data.data.channel_members.map(val=>val.user_id)        \n        const filteredChannelMembers = users.filter(user=>channelMembers.includes(user.id))        \n        setChannelMembers(filteredChannelMembers)\n        setUsersDisplayed({home: false, channel: true})      \n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n\n  const returnToHome = () => {\n    setUsersDisplayed({home: true, channel: false})\n    clearTimeout(req1);\n    clearTimeout(req2);\n    setAllMessagesRetrieved([]);\n    setSelectedChannel([]);\n    setSelectedUser([]);\n  };\n\n  const signOut = () => {    \n    setUsersDisplayed({home: true, channel: false})      \n    clearTimeout(req1);\n    clearTimeout(req2);\n    setAllMessagesRetrieved([]);\n    setSelectedChannel([]);\n    setSelectedUser([]);    \n    setUserStatus({isLoggedIn: false, signedOut: true})    \n  }\n\n  const sortByEmail = (val) => {\n    // setTimeout(() => {\n      const sortedUsers = withoutCurrentUser.filter((value) =>\n        value.email.includes(val)\n      );\n      setSearchResults(sortedUsers);\n    // }, 500);\n  };\n\n  const [currentDateAndTime, setCurrentDateAndTime] = useState({\n    currentTime: \"\",\n    currentDate: \"\",\n  });\n\n  const getCurrentTime = () => {\n    var d = new Date();\n    var weekday = new Array(7);\n    weekday[0] = \"Sunday\";\n    weekday[1] = \"Monday\";\n    weekday[2] = \"Tuesday\";\n    weekday[3] = \"Wednesday\";\n    weekday[4] = \"Thursday\";\n    weekday[5] = \"Friday\";\n    weekday[6] = \"Saturday\";\n    setInterval(() => {\n      const time = new Date().toLocaleTimeString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n      var currentDay = weekday[d.getDay()];\n      setCurrentDateAndTime({ currentTime: time, currentDate: currentDay });\n    }, 1000);\n  };\n\n  return {\n    loading,\n    headers,\n    users,\n    channels,\n    handleClickOpenChannel,\n    openChannel,\n    inviteUserToAChannel,\n    createNewChannelWithUser,\n    handleClickOpenUsers,\n    openUsers,\n    handleDrawerToggle,\n    mobileOpen,\n    allMessagesRetrieved,\n    message,\n    setMessage,\n    selectedChannel,\n    setSelectedChannel,\n    createMessageInAChannel,\n    intervalRetrieveMessages,\n    userID,\n    returnToHome,\n    sortByEmail,\n    searchResults,\n    selectedUser,\n    createDirectMessageToAUser,\n    intervalRetrieveMessagesWithUser,\n    currentDateAndTime,\n    isCreateChannel,\n    setIsCreateChannel,\n    userInviteError,\n    setUserInviteError,\n    stateSB,\n    setStateSB,\n    retrieveChannelUsers,\n    channelMembers,\n    usersDisplayed,\n    signOut,\n    userStatus,\n    setMobileOpen\n  };\n};\n\nexport default Hooks;\n","import {useState, useEffect} from 'react'\nimport axios from 'axios';\nimport useLocalStorage from './useLocalStorage';\n\nconst Hooks = () => {\n\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    setTimeout(() => {\n    setLoading(false)\n    }, 3000);\n  }, [])\n\n    const [headers, setHeaders] = useLocalStorage('headers', [])\n    const [userID, setUserID] = useLocalStorage('userID', []);\n    const [password, setPassword] = useState('')\n    const [secondPassword, setSecondPassword] = useState('')    \n    const [email, setEmail] = useState('')    \n    const [isRegistering, setIsRegistering] = useState(false)\n    const [route, setRoute] = useState(false)   \n    const [userStatus, setUserStatus] = useLocalStorage('status', {\n      isLoggedIn: false,\n      signedOut: false,\n    })\n    const [validInfo, setValidInfo] = useState({\n            passwordsDoNotMatch: false,\n            invalidEmailFormat: false,\n            emailIsEmpty: false,\n            passwordIsEmpty: false,\n            passwordTooShort: false,\n        })\n    const [isRegister, setIsRegister] = useState({\n           successful: false,\n           failed: false,           \n        })\n    const [isLogin, setIsLogin] = useState({\n           successful: false,\n           failed: false\n        })\n    \n        \n    const registerUser = () => {      \n\n         axios({      \n            url: 'https://slackapi.avionschool.com/api/v1/auth',\n            data: {'email': email,\n                  'password': password,\n                  'password_confirmation': secondPassword},\n            headers: {},\n            method: 'POST',\n            }).then(() => {                \n                setIsRegister({successful:true})                \n                resetUserInput()\n            })\n            .catch((error) => {\n                console.log(error)\n                setIsRegister({failed: true})\n            })\n        \n    }\n\n    const register = (e) => {\n        e.preventDefault()\n        if(!email.includes(\"@\" && \".\")) {            \n        setValidInfo({invalidEmailFormat: true})}   \n            else if (!password || !secondPassword){\n            setValidInfo({passwordIsEmpty: true})}     \n                 else if (password !== secondPassword) {\n                setValidInfo({passwordsDoNotMatch: true})\n                    } else if (password.length < 6) {\n                      setValidInfo({passwordTooShort: true})\n                    }\n         else {         \n           registerUser()\n         }\n\n    }\n\n    const  loginUser = () =>{\n\n       axios({      \n        url: 'https://slackapi.avionschool.com/api/v1/auth/sign_in',\n        data: {'email': email,\n              'password': password},\n        headers: {},\n        method: 'POST',\n        }).then((res) => {          \n          setUserID(res.data.data.id)\n          setHeaders(res.headers)\n          transition()\n          resetUserInput()          \n        })   \n        .catch((error) => {\n            console.log(error)\n            setIsLogin({failed: true})\n        })         \n    }    \n \n   const logIn = (e) =>{   \n     e.preventDefault()  \n        if(!email) {\n        setValidInfo({emailIsEmpty: true})\n        } else if (!password){\n            setValidInfo({passwordIsEmpty: true}) \n            } else if(!email.includes(\"@\" && \".\")) {            \n             setValidInfo({invalidEmailFormat: true})                \n                } else { \n             loginUser()\n    }\n   } \n\n\n   const resetUserInput = () => {\n     setEmail('')\n     setPassword('')\n     setSecondPassword('')\n   }\n\n   const transition = () => {\n    setLoading(true)\n    setTimeout(() => {setLoading(false); setRoute(true)}, 2000)\n    setUserStatus({isLoggedIn: true, signedOut: false})\n   }\n\n    return {               \n        password,\n        setPassword,\n        email,\n        setEmail,                \n        logIn,                \n        setIsLogin,\n        isLogin,\n        isRegistering,\n        setIsRegistering,\n        secondPassword,\n        setSecondPassword,\n        register,\n        registerUser,\n        isRegister,\n        setIsRegister,\n        validInfo,\n        setValidInfo,\n        setLoading,\n        loading,\n        transition,\n        route,\n        setRoute,          \n    }   \n}\n\nexport default Hooks\n","import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport useHooks from \"./hooks\";\nimport \"./styles.css\";\nimport { HashLoader } from \"react-spinners\";\nimport { Fade } from \"react-reveal\";\nimport { CgSlack } from \"react-icons/cg\";\nimport { Redirect } from \"react-router-dom\";\n\nconst theme = createTheme();\n\nexport const SignIn = () => {\n  const {\n    password,\n    setPassword,\n    secondPassword,\n    setSecondPassword,\n    email,\n    setEmail,\n    logIn,\n    isLogin,\n    setIsLogin,\n    isRegistering,\n    setIsRegistering,\n    register,\n    isRegister,\n    setIsRegister,\n    setValidInfo,\n    validInfo,\n    loading,\n    route,    \n} = useHooks() \n  \n  return (\n    <>\n      \n      {route && <Redirect to=\"/chat\" />}\n      {loading ? (\n        <>\n        \n          <div className=\"loader\">\n            <HashLoader loading={loading} color={\"purple\"} size={80} />\n            <h3>Loading...</h3>\n          </div>\n        </>\n      ) : (\n        <>\n        <div className=\"background\"></div>\n          <Fade up>\n            <div className=\"heading-container\">\n              <span className=\"heading\">\n                <CgSlack />\n                Avion Slack App\n              </span>\n              <span className=\"website\">avionschool.slack.com</span>\n            </div>\n            <ThemeProvider theme={theme}>\n              <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                  sx={{\n                    marginTop: 5,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Avatar sx={{ m: 1, bgcolor: \"purple\" }}></Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                    {isRegistering ? \"Register \" : \"Sign in\"}\n                  </Typography>\n                  <Box\n                    component=\"form\"\n                    onClick={() => {\n                      setIsLogin(false);\n                      setIsRegister(false);\n                      setValidInfo(false);\n                    }}\n                    noValidate\n                    sx={{ mt: 1 }}\n                  >\n                    <TextField\n                      onChange={(e) => setEmail(e.target.value)}\n                      value={email}\n                      margin=\"normal\"\n                      fullWidth\n                      label=\"Email Address\"\n                      type=\"text\"\n                      autoFocus\n                    />\n\n                    <TextField\n                      onChange={(e) => setPassword(e.target.value)}\n                      value={password}\n                      margin=\"normal\"\n                      fullWidth\n                      label=\"Password\"\n                      type=\"password\"\n                    />\n\n                    {isRegistering && (\n                      <Fade up>\n                        {\" \"}\n                        <TextField\n                          onChange={(e) => setSecondPassword(e.target.value)}\n                          value={secondPassword}\n                          margin=\"normal\"\n                          fullWidth\n                          label=\"Re-type Password\"\n                          type=\"password\"\n                        />{\" \"}\n                      </Fade>\n                    )}\n                    {isLogin.failed && (\n                      <span className=\"failed\">Invalid email or password</span>\n                    )}\n                    {isRegister.successful && (\n                      <span className=\"success\">Registration Success!</span>\n                    )}\n                    {isRegister.failed && (\n                      <span className=\"failed\">Email already taken</span>\n                    )}\n                    {validInfo.invalidEmailFormat && (\n                      <span className=\"failed\">Invalid email format</span>\n                    )}\n                    {validInfo.emailIsEmpty && (\n                      <span className=\"failed\">Email is required</span>\n                    )}\n                    {validInfo.passwordIsEmpty && (\n                      <span className=\"failed\">Password is required</span>\n                    )}\n                    {validInfo.passwordsDoNotMatch && (\n                      <span className=\"failed\">Passwords do not match</span>\n                    )}\n                  </Box>\n\n                  <Button\n                    onClick={(e) => {\n                      isRegistering ? register(e) : logIn(e);\n                    }}\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2, backgroundColor: \"purple\" }}\n                  >\n                    {isRegistering ? \"Sign up\" : \"Sign In\"}\n                  </Button>\n                  <Grid container>\n                    <Grid item>\n                      <Link\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => setIsRegistering(!isRegistering)}\n                        variant=\"body2\"\n                      >\n                        {isRegistering\n                          ? \"Already have an account? Sign in\"\n                          : \"Don't have an account? Sign Up\"}\n                      </Link>\n                    </Grid>\n                  </Grid>               \n                </Box>\n                <Typography\n                  className=\"copyright\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  align=\"center\"\n                  sx={{ mt: 3, mb: 2 }}\n                >\n                  {\"Copyright © \"}\n                  <span color=\"inherit\">Avion School Slack App</span>{\" \"}\n                  {new Date().getFullYear()}\n                  {\".\"}\n                </Typography>\n              </Container>\n            </ThemeProvider>\n          </Fade>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SignIn;\n","\nimport { HashLoader } from \"react-spinners\";\n\nconst Loaders = ({loading}) => {\n    return (\n        <>             \n        <div className=\"loader\">\n          <HashLoader loading={loading} color={\"purple\"} size={80}/> \n          <h3>Almost there...</h3>\n          </div> \n          </>\n    )\n}\n\nexport default Loaders\n","import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport List from \"@mui/material/List\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\n\nconst FormDialoguesComponent = ({\n  open,\n  handleClose,\n  dialogTitleText,\n  inviteUserToAChannel,\n  label,\n  type,\n  createNewChannelWithUser,\n  intervalRetrieveMessagesWithUser,\n  sortByEmail,\n  searchResults,\n  isCreateChannel,\n  setIsCreateChannel,\n  userInviteError,\n  setUserInviteError,\n  setGetChannel,\n  setGetEmail\n  \n}) => {\n  const [valueFromForm, setValueFromForm] = useState(\"\");\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle sx={{ pb: 1 }}>{dialogTitleText}</DialogTitle>\n        <DialogContent>\n          {sortByEmail && (\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label={label}\n              type={type}\n              fullWidth\n              variant=\"standard\"\n              onChange={(e) => {\n                setValueFromForm(e.target.value);\n                sortByEmail(valueFromForm);\n              }}\n              value={valueFromForm}\n            />\n          )}\n\n          {searchResults && (\n            <List className=\"list-results\">\n              {searchResults.map((val) => {\n                return (\n                  <ListItemButton\n                    sx={{ pl: 4 }}\n                    key={val.id}\n                    onClick={() => {\n                      intervalRetrieveMessagesWithUser(val);\n                      handleClose();\n                      setValueFromForm(\"\");\n                    }}\n                  >\n                    <ListItemText primary={`${val.uid}`} />\n                  </ListItemButton>\n                );\n              })}\n            </List>\n          )}\n\n          {inviteUserToAChannel && (\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label={label}\n              type={type}\n              fullWidth\n              variant=\"standard\"\n              onChange={(e) => {\n                setValueFromForm(e.target.value);\n              }}\n              value={valueFromForm}\n            />\n          )}\n\n          {userInviteError && (\n            <span style={{ color: \"red\" }}>{userInviteError}</span>\n          )}\n\n          {createNewChannelWithUser && (\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label={label}\n              type={type}\n              fullWidth\n              variant=\"standard\"\n              onChange={(e) => {\n                setValueFromForm(e.target.value);\n              }}\n              value={valueFromForm}\n            />\n          )}\n          {isCreateChannel?.failed && (\n            <span style={{ color: \"red\" }}>{[...isCreateChannel.failed]}</span>\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            onClick={() => {\n              handleClose();\n              setValueFromForm(\"\");\n              isCreateChannel && setIsCreateChannel(false);\n              userInviteError && setUserInviteError(\"\");\n            }}\n          >\n            Cancel\n          </Button>\n          {inviteUserToAChannel && (\n            <Button\n              onClick={() => {\n                setGetEmail(valueFromForm)\n                inviteUserToAChannel(valueFromForm, handleClose, setValueFromForm)\n                setTimeout(() => {\n                setGetEmail('')\n              }, 4000);  \n              }}\n            >\n              Invite\n            </Button>\n          )}\n          {createNewChannelWithUser && (\n            <Button\n              sx={{ alignItems: \"center\" }}\n              onClick={() => {\n                setGetChannel(valueFromForm)\n                createNewChannelWithUser(valueFromForm, handleClose, setValueFromForm)\n                setTimeout(() => {\n                setGetChannel('')\n              }, 4000);                \n              }}\n            >\n              Create\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\n\n\nexport default FormDialoguesComponent;\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function SignOutComponent({open, handleClose, Avatar, signOut, headers}) {\n  const email = headers.uid.toString()\n\n\n  return (\n    <div>     \n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure want to sign out?\"}\n        </DialogTitle>\n        <DialogContent style={{display: 'flex', alignItems: 'center'}}> \n        <Avatar style={{marginRight: \"10px\", backgroundColor: \"purple\"}}>{`${email[0].toUpperCase()}`}</Avatar>\n        {email}\n        {/* {val.email.slice(0, 1).toUpperCase()} */}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>No</Button>\n          <Button onClick={()=>{signOut(); handleClose()}} autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ForumIcon from \"@mui/icons-material/Forum\";\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\nimport FormDialoguesComponent from \"./FormDialoguesComponent\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport SignOutComponent from './SignOutComponent'\nimport Avatar from '@mui/material/Avatar';\nimport {Redirect} from \"react-router-dom\";\nimport {GrClose} from 'react-icons/gr'\n\n\n\nconst SidebarComponent = ({\n  handleClickOpenChannel,\n  openChannel,\n  channels,\n  createNewChannelWithUser,\n  handleClickOpenUsers,\n  users,\n  openUsers,\n  setSelectedChannel,\n  intervalRetrieveMessages,\n  returnToHome,\n  sortByEmail,\n  searchResults,\n  intervalRetrieveMessagesWithUser,\n  isCreateChannel,\n  setIsCreateChannel,  \n  setGetChannel,\n  retrieveChannelUsers,  \n  userStatus,\n  headers,\n  signOut,\n  setMobileOpen\n}) => {\n  const [openForInviteUser, setOpenForInviteUser] = useState(false);\n  const handleClickOpenForInviteUser = () => {\n    setOpenForInviteUser(true);\n  };\n  const handleCloseForInviteUser = () => {\n    setOpenForInviteUser(false);\n  };\n\n  const [openForSendDirectMessage, setOpenForSendDirectMessage] =\n    useState(false);\n  const handleClickOpenSendDirectMessage = () => {\n    setOpenForSendDirectMessage(true);\n  };\n  const handleCloseForSendDirectMessage = () => {\n    setOpenForSendDirectMessage(false);\n  };\n  //sign-out\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>   \n    {userStatus.signedOut && <Redirect to=\"/\" />}\n     <Toolbar style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}} sx={{bgcolor: \"purple\"}}>\n          <span style={{color: 'white'}}>Avion Slack App</span>\n           <GrClose className=\"toolbar-close-button\" onClick={()=>setMobileOpen(false)}/>\n     </Toolbar>  \n      <div className=\"sidebar-container channel-list\">\n\n\n      <div className=\"side-navigation\" style={{backgroundColor:\"#b491c8\"}}> \n\n      <List>\n\n          <ListItemButton className=\"side-navigation-item\" onClick={() => {returnToHome()}}>            \n          <HomeIcon />              \n          <span style={{fontSize:\"0.75rem\"}}>  \n          Home\n          </span>                \n          </ListItemButton>\n\n          <ListItemButton className=\"side-navigation-item\" onClick={() => handleClickOpenForInviteUser()}>\n            <GroupAddIcon />                      \n            <span style={{fontSize:\"0.75rem\"}}>  \n            Add\n          </span> \n          <span style={{fontSize:\"0.75rem\"}}>  \n            Channel\n          </span> \n          </ListItemButton>\n          \n          <ListItemButton className=\"side-navigation-item\" onClick={() => handleClickOpenSendDirectMessage()}>            \n              <ForumIcon />    \n          <span style={{fontSize:\"0.75rem\"}}>  \n          Direct\n          </span> \n          <span style={{fontSize:\"0.75rem\"}}>  \n             Message\n          </span>        \n          </ListItemButton>\n\n     </List>\n\n     <List>\n\n     <ListItemButton className=\"side-navigation-item sign-out-button\" onClick={() => {setOpen(true)}}>            \n          <LogoutIcon />              \n          <span>\n          Sign Out\n          </span>                \n          </ListItemButton>\n\n\n     </List>\n\n       \n      \n\n        </div>\n\n\n\n\n      <div className=\"main-sidebar\">    \n        <List>   \n            <div style={{display: 'flex'}}>                   \n              <GroupIcon sx={{mt: 0.5, mr: 1}} />            \n            <ListItemText\n              primary={`Channels (${channels ? channels.length : 0})`}/>    \n              </div>\n              \n            <List component=\"div\" disablePadding>           \n              {channels ? (\n                channels.map((channel) => {\n                  return (<div key={channel.id}>\n                    \n                    <ListItemButton \n                      sx={{ pl: 4 }}\n                     \n                      onClick={() => {\n                        intervalRetrieveMessages(channel.id);\n                        setSelectedChannel(channel);\n                        retrieveChannelUsers(channel.id)\n                      }}\n                    >\n                      <ListItemText primary={`# ${channel.name}`} />\n                    </ListItemButton>\n                    \n                    </div> );\n                })\n              ) : (\n                <ListItemButton sx={{ pl: 4 }}>\n                  <ListItemText primary={`No users Available`} />\n                </ListItemButton>\n              )}              \n            </List>\n           \n              \n          {/* </Collapse> */}\n        </List>\n\n        \n\n        <List>\n         \n        </List>\n\n        \n\n\n        \n\n        {/* <List>\n          <ListItemButton onClick={handleClickOpenUsers}>\n            <ListItemIcon>\n              <ChatBubbleIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary={`All Users (reduced to ${users.slice(0, 20).length})`}\n            />\n            {openUsers ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n          </ListItemButton>\n          <Collapse in={openUsers} timeout=\"auto\" unmountOnExit>\n            <List>\n              {users.slice(0, 20).map((val) => {\n                return (\n                  <ListItemButton sx={{ pl: 4 }} key={val.id}>\n                    <ListItemText primary={`${val.uid}`} />\n                  </ListItemButton>\n                );\n              })}\n            </List>\n          </Collapse>\n        </List> */}\n\n        \n      </div>\n      </div>\n\n      {/* For Create Channel */}\n      <FormDialoguesComponent\n        open={openForInviteUser}\n        handleClose={handleCloseForInviteUser}\n        dialogTitleText={\"Enter New Channel Name You Want to Create\"}\n        label={\"Channel Name\"}\n        type={`text`}\n        createNewChannelWithUser={createNewChannelWithUser}\n        isCreateChannel={isCreateChannel}\n        setIsCreateChannel={setIsCreateChannel}\n        setGetChannel={setGetChannel}\n      />\n      {/* For Send a DM Modal */}\n      <FormDialoguesComponent\n        open={openForSendDirectMessage}\n        handleClose={handleCloseForSendDirectMessage}\n        dialogTitleText={\"Who do you want to send a message to?\"}\n        label={\"Email\"}\n        type={`text`}\n        users={users}\n        sortByEmail={sortByEmail}\n        searchResults={searchResults}\n        intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\n      />\n      <SignOutComponent\n      open={open}\n      setOpen={setOpen}\n      handleClickOpen={handleClickOpen}\n      handleClose={handleClose}\n      Avatar={Avatar}\n      userStatus={userStatus}\n      headers={headers}\n      signOut={signOut}      \n      />\n\n\n    </>\n  );\n};\n\nexport default SidebarComponent;\n","import { useState } from \"react\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport FormDialoguesComponent from \"./FormDialoguesComponent\";\nimport \"./styles.css\"\n\n\nconst TopBarComponent = ({\n  drawerWidth,\n  headers,\n  handleDrawerToggle,\n  channels,\n  selectedChannel,\n  inviteUserToAChannel,\n  userID,\n  selectedUser,\n  currentDateAndTime,\n  userInviteError,\n  setUserInviteError,\n  setGetEmail\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <AppBar\n        className=\"appbar\"\n        position=\"fixed\"\n        sx={{\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\n          ml: { sm: `${drawerWidth}px` },\n        }}\n      >\n        <Toolbar \n          className=\"top-toolbar\" \n          style={{\n            backgroundColor: \"purple\"}} >\n\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: \"none\" } }}\n          >\n            <MenuIcon />\n          </IconButton>\n          {selectedChannel.name ? (\n            <Box onClick={() => handleClickOpen()}>\n              <ListItemButton className=\"invite-button\">\n                <PersonAddIcon style={{fontSize: '1.5rem', marginRight: '0.5rem'}} />\n                <span className=\"invite\">\n                  {`Invite`}\n                </span>\n              </ListItemButton>\n            </Box>\n          ) : (\n            <Box style={{display: \"flex\", flexDirection: 'column'}}>\n            <span style={{fontSize: '0.75rem'}}>\n              {`${currentDateAndTime.currentDate}`}\n              </span>\n              <span style={{fontSize: '0.75rem'}}>\n              {`${currentDateAndTime.currentTime}`}\n              </span>\n            </Box>\n          )}\n\n          {(selectedChannel.name || selectedUser.email) && (\n            <Box>\n              <ListItemButton>\n              <span style={{fontSize: '0.9rem'}} className=\"topbar-small\">\n                  {selectedChannel.name && <span><span className=\"top-bar-channel\">Channel:</span> <span>{selectedChannel.name}</span></span>}{\" \"}\n                  {selectedUser.email && `Chat with ${selectedUser.email}`}\n                  </span>\n              </ListItemButton>\n            </Box>\n          )}\n\n          <Box className=\"top-bar-email\">         \n            <span style={{fontSize: '0.75rem', paddingRight: '2px'}}>\n              {`${headers.uid}`}\n              </span>\n              <span style={{fontSize: '0.75rem'}}>\n              {`ID: ${userID}`}\n              </span>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      {/* Form Dialogues */}\n      <FormDialoguesComponent\n        open={open}\n        handleClose={handleClose}\n        dialogTitleText={\n          selectedChannel &&\n          `Enter email to invite to ${selectedChannel.name}`\n        }\n        channels={channels}\n        type={\"text\"}\n        label={\"Email\"}\n        inviteUserToAChannel={inviteUserToAChannel}\n        userInviteError={userInviteError}\n        setUserInviteError={setUserInviteError}\n        setGetEmail={setGetEmail}\n      />\n    </>\n  );\n};\n\nexport default TopBarComponent;\n","import React from \"react\";\nimport Snackbar from \"@mui/material/Snackbar\";\n\nexport default function SnackBarComponent({stateSB, setStateSB, messageSB}) {\n\n    const { vertical, horizontal, openSB } = stateSB;\n\n  return (        \n        <Snackbar     \n        open={openSB}\n        autoHideDuration={3000}      \n        anchorOrigin={{ vertical, horizontal }}        \n        onClose={()=>setStateSB({ ...stateSB, openSB: false })}\n        message={messageSB}\n        key={vertical + horizontal}\n      />    \n  );\n}\n","import Toolbar from \"@mui/material/Toolbar\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport SnackBarComponent from \"./SnackbarComponent\";\nimport Avatar from '@mui/material/Avatar';\nimport moment from 'moment';\nimport {RiSendPlaneFill} from 'react-icons/ri'\n\nconst ChatBodyComponent = ({\n  allMessagesRetrieved,\n  setMessage,\n  message,\n  createMessageInAChannel,\n  selectedChannel,\n  selectedUser,\n  createDirectMessageToAUser,\n  stateSB,\n  setStateSB,\n  getChannel,\n  getEmail,  \n}) => {\n  return (\n    <>\n    { getChannel && <SnackBarComponent\n        stateSB={stateSB}\n        messageSB={`Successfully Created Channel: ${getChannel}!`}\n        setStateSB={setStateSB}\n      />} \n\n    { getEmail && <SnackBarComponent\n        stateSB={stateSB}\n        messageSB={`Successfully Added User: ${getEmail}!`}\n        setStateSB={setStateSB}\n      />}\n\n      <Box component=\"main\"  className=\"chat-body\">\n        <Toolbar />\n        <Box\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",            \n            width: '600px',            \n          }}\n        >\n          {allMessagesRetrieved?.length >= 1\n            ? allMessagesRetrieved.map((val) => {\n                return (\n                  <div key={val.id}>\n                  <div style={{display: 'flex', alignItems: 'center'}}>\n                    <div style={{padding: '12.5px 0', marginRight: \"25px\"}}>\n                    <Avatar style={{backgroundColor: \"purple\"}}>{val.sender.email.slice(0, 1).toUpperCase()}</Avatar>           \n                    </div>\n                    <div style={{padding: '15px 0 12.5px 0'}}>\n                    <p style={{margin: '0'}}> {`${val.sender.email.split(\"@\")[0]} says:`}</p>\n                    <p style={{margin: '0'}}>{val.body}</p>     \n                    <p style={{margin: '0', fontSize: \"12px\"}}>{`${moment(val.created_at).fromNow()}`}</p>               \n                    </div>\n                  </div>                   \n                  </div>\n                );\n              })\n            : (selectedChannel.name && (\n                <span className=\"greetings\">\n                  Channel: {selectedChannel.name} has no messages.\n                </span>\n              )) ||\n              (selectedUser.email && (\n                <span className=\"greetings\">\n                  You have no chat history with {selectedUser.email.split(\"@\")[0]}. Send\n                  him/her a message!\n                </span>\n              )) || (\n                <span className=\"greetings\">\n                  Welcome to Avion Slack App! Hop on a channel or send a DM to\n                  get started!👀\n                </span>\n              )}\n        </Box>\n\n        {selectedChannel.name && (\n          <Box\n            className=\"message-area-container\"\n            component=\"form\"\n            noValidate\n            autoComplete=\"off\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              createMessageInAChannel(message);\n              setMessage(\"\");\n            }}\n          >\n            <TextField\n              className=\"message-area\"\n              id=\"outlined-basic\"\n              label=\"Enter your message here\"\n              variant=\"outlined\"\n              onChange={(e) => setMessage(e.target.value)}\n              value={message}\n            />\n            <div className=\"send-message-button\"\n             onClick={(e) => {\n              e.preventDefault();\n              createMessageInAChannel(message);\n              setMessage(\"\");\n            }}>\n            <RiSendPlaneFill size={40}/>\n            </div>\n          </Box>\n        )}\n\n        {selectedUser.email && (\n          <Box\n            className=\"message-area-container\"\n            component=\"form\"\n            noValidate\n            autoComplete=\"off\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              createDirectMessageToAUser(message);\n              setMessage(\"\");\n            }}\n          >\n            <TextField\n              className=\"message-area\"\n              id=\"outlined-basic\"\n              label=\"Enter your message here\"\n              variant=\"outlined\"\n              onChange={(e) => setMessage(e.target.value)}\n              value={message}\n            />\n            <div className=\"send-message-button\"\n              onClick={(e) => {\n              e.preventDefault();\n              createDirectMessageToAUser(message);\n              setMessage(\"\");\n            }}>\n            <RiSendPlaneFill size={40}/>\n            </div>\n\n          </Box>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default ChatBodyComponent;\n","import React from 'react'\nimport Drawer from '@mui/material/Drawer';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport Avatar from '@mui/material/Avatar';\n\nconst drawerWidth = 240;\n\nconst RightSideBar = ({users, channelMembers, usersDisplayed}) => {\n    return (\n        <Drawer \n        className=\"right-side-bar\"      \n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,          \n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"permanent\"\n        anchor=\"right\"\n      >\n        <Toolbar \n        \n        />        \n        <Divider />\n        \n\n        \n      { usersDisplayed.home &&\n        (<>\n        <ListSubheader>ALL USERS</ListSubheader>\n        <List style={{ overflowX: \"hidden\" }} className=\"channel-list\">\n        {users.slice(0, 100).map((val) => {\n                return (\n                  <ListItem  key={val.id}>\n                    <Avatar style={{marginRight: \"10px\", backgroundColor: \"purple\"}}>{val.email.slice(0, 1).toUpperCase()}</Avatar>\n                    <ListItemText style={{ margin: 0, width: '100%',}} primary={`${val.uid.split(\"@\")[0]}`} />\n                  </ListItem>\n                );\n              })}\n        </List>\n        </>)\n            }\n\n        {usersDisplayed.channel &&\n        (<>\n        <ListSubheader>Channel Members</ListSubheader>\n        <List style={{ overflowX: \"hidden\" }} className=\"channel-list\">\n        {channelMembers.map((val) => {\n                return (\n                  <ListItem key={val.id}>\n                     <Avatar style={{marginRight: \"10px\", backgroundColor: \"purple\"}}>{val.email.slice(0, 1).toUpperCase()}</Avatar>\n                    <ListItemText style={{ margin: 0, width: '100%',}} primary={`${val.email.split(\"@\")[0]}`} />\n                  </ListItem>\n                );\n              })}\n        </List>\n        </>)\n        }\n\n        <Divider />\n      </Drawer>\n    )\n}\n\nexport default RightSideBar\n","import Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Drawer from \"@mui/material/Drawer\";\nimport SidebarComponent from \"./SidebarComponent\";\nimport TopBarComponent from \"./TopBarComponent\";\nimport ChatBodyComponent from \"./ChatBodyComponent\";\nimport RightSideBar from \"./RightSideBar\";\nimport { useState } from \"react\";\nimport {Redirect} from \"react-router-dom\";\n\nconst MainChatComponent = ({\n  headers,\n  users,\n  channels,\n  handleClickOpenChannel,\n  openChannel,\n  inviteUserToAChannel,\n  createNewChannelWithUser,\n  handleClickOpenUsers,\n  openUsers,\n  handleDrawerToggle,\n  mobileOpen,\n  allMessagesRetrieved,\n  message,\n  setMessage,\n  isAChannelSelected,\n  selectedChannel,\n  setSelectedChannel,\n  createMessageInAChannel,\n  intervalRetrieveMessages,\n  userID,\n  returnToHome,\n  sortByEmail,\n  searchResults,\n  selectedUser,\n  createDirectMessageToAUser,\n  intervalRetrieveMessagesWithUser,\n  currentDateAndTime,\n  isCreateChannel,\n  setIsCreateChannel,\n  userInviteError,\n  setUserInviteError,\n  stateSB,\n  setStateSB,\n  retrieveChannelUsers,\n  channelMembers,\n  usersDisplayed,\n  userStatus,\n  signOut,\n  setMobileOpen\n}) => {\n  const drawerWidth = 320;\n  //   const {window} = props;\n  //   const container =\n  //     window !== undefined ? () => window().document.body : undefined;\n  const [getChannel, setGetChannel] = useState('')\n  const [getEmail, setGetEmail] = useState('')\n\n  return (\n    <>\n    \n      <Box>\n        <CssBaseline />\n        <TopBarComponent\n          drawerWidth={drawerWidth}\n          headers={headers}\n          handleDrawerToggle={handleDrawerToggle}\n          isAChannelSelected={isAChannelSelected}\n          selectedChannel={selectedChannel}\n          inviteUserToAChannel={inviteUserToAChannel}\n          userID={userID}\n          selectedUser={selectedUser}\n          currentDateAndTime={currentDateAndTime}\n          userInviteError={userInviteError}\n          setUserInviteError={setUserInviteError}\n          setGetEmail={setGetEmail}    \n        />\n        <Box\n          component=\"nav\"\n          sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n          aria-label=\"mailbox folders\"\n        >\n          <Drawer            \n            variant=\"temporary\"\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n            sx={{\n              display: { xs: \"block\", sm: \"none\" },\n              \"& .MuiDrawer-paper\": {\n                boxSizing: \"border-box\",\n                width: drawerWidth,\n              },\n            }}\n          >\n            {\n              <SidebarComponent\n                handleClickOpenChannel={handleClickOpenChannel}\n                openChannel={openChannel}\n                createNewChannelWithUser={createNewChannelWithUser}\n                handleClickOpenUsers={handleClickOpenUsers}\n                users={users}\n                openUsers={openUsers}\n                setSelectedChannel={setSelectedChannel}\n                intervalRetrieveMessages={intervalRetrieveMessages}\n                returnToHome={returnToHome}\n                sortByEmail={sortByEmail}\n                searchResults={searchResults}\n                intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\n                channels={channels}\n                isCreateChannel={isCreateChannel}\n                setIsCreateChannel={setIsCreateChannel}   \n                setGetChannel={setGetChannel} \n                retrieveChannelUsers={retrieveChannelUsers}                  \n                userStatus={userStatus}\n                headers={headers}\n                signOut={signOut} \n                setMobileOpen={setMobileOpen}                  \n              />\n            }\n          </Drawer>\n          <Drawer\n            variant=\"permanent\"\n            sx={{\n              display: { xs: \"none\", sm: \"block\" },\n              \"& .MuiDrawer-paper\": {\n                boxSizing: \"border-box\",\n                width: drawerWidth,\n              },\n            }}\n            open\n          >\n            {\n              <SidebarComponent\n                handleClickOpenChannel={handleClickOpenChannel}\n                openChannel={openChannel}\n                createNewChannelWithUser={createNewChannelWithUser}\n                handleClickOpenUsers={handleClickOpenUsers}\n                users={users}\n                openUsers={openUsers}\n                setSelectedChannel={setSelectedChannel}\n                intervalRetrieveMessages={intervalRetrieveMessages}\n                returnToHome={returnToHome}\n                sortByEmail={sortByEmail}\n                searchResults={searchResults}\n                intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\n                channels={channels}\n                isCreateChannel={isCreateChannel}\n                setIsCreateChannel={setIsCreateChannel}\n                setGetChannel={setGetChannel}     \n                retrieveChannelUsers={retrieveChannelUsers}                  \n                userStatus={userStatus}        \n                headers={headers}    \n                signOut={signOut}         \n                setMobileOpen={setMobileOpen}                            \n              />\n            }\n          </Drawer>\n          </Box>\n\n\n          <RightSideBar\n            users={users}\n            channelMembers={channelMembers}\n            usersDisplayed={usersDisplayed}\n            />        \n\n            \n        <ChatBodyComponent\n          allMessagesRetrieved={allMessagesRetrieved}\n          setMessage={setMessage}\n          message={message}\n          createMessageInAChannel={createMessageInAChannel}\n          selectedChannel={selectedChannel}\n          selectedUser={selectedUser}\n          createDirectMessageToAUser={createDirectMessageToAUser}\n          stateSB={stateSB}\n          setStateSB={setStateSB}          \n          getChannel={getChannel}\n          getEmail={getEmail}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default MainChatComponent;\n","import React from \"react\";\nimport Loaders from \"./Loaders\";\nimport useHooks from \"./hooks\";\nimport MainChatComponent from \"./MainChatComponent\";\nimport \"./styles.css\";\n\nconst Index = () => {\n  const {\n    headers,\n    users,\n    channels,\n    handleClickOpenChannel,\n    openChannel,\n    inviteUserToAChannel,\n    createNewChannelWithUser,\n    handleClickOpenUsers,\n    openUsers,\n    handleDrawerToggle,\n    mobileOpen,\n    allMessagesRetrieved,\n    message,\n    setMessage,\n    isAChannelSelected,\n    selectedChannel,\n    setSelectedChannel,\n    createMessageInAChannel,\n    intervalRetrieveMessages,\n    userID,\n    returnToHome,\n    sortByEmail,\n    searchResults,\n    selectedUser,\n    createDirectMessageToAUser,\n    intervalRetrieveMessagesWithUser,\n    loading,\n    currentDateAndTime,\n    isCreateChannel,\n    setIsCreateChannel,\n    userInviteError,\n    setUserInviteError,\n    stateSB,\n    setStateSB,\n    retrieveChannelUsers,\n    channelMembers,\n    usersDisplayed,\n    userStatus,\n    signOut,\n    setMobileOpen\n  } = useHooks();\n\n  return (\n    <>\n      {loading ? (\n        <Loaders loading={loading} />\n      ) : (\n        <MainChatComponent\n          headers={headers}\n          users={users}\n          channels={channels}\n          handleClickOpenChannel={handleClickOpenChannel}\n          openChannel={openChannel}\n          inviteUserToAChannel={inviteUserToAChannel}\n          createNewChannelWithUser={createNewChannelWithUser}\n          handleClickOpenUsers={handleClickOpenUsers}\n          openUsers={openUsers}\n          handleDrawerToggle={handleDrawerToggle}\n          mobileOpen={mobileOpen}\n          allMessagesRetrieved={allMessagesRetrieved}\n          message={message}\n          setMessage={setMessage}\n          isAChannelSelected={isAChannelSelected}\n          selectedChannel={selectedChannel}\n          setSelectedChannel={setSelectedChannel}\n          createMessageInAChannel={createMessageInAChannel}\n          intervalRetrieveMessages={intervalRetrieveMessages}\n          userID={userID}\n          returnToHome={returnToHome}\n          sortByEmail={sortByEmail}\n          searchResults={searchResults}\n          selectedUser={selectedUser}\n          createDirectMessageToAUser={createDirectMessageToAUser}\n          intervalRetrieveMessagesWithUser={intervalRetrieveMessagesWithUser}\n          currentDateAndTime={currentDateAndTime}\n          isCreateChannel={isCreateChannel}\n          setIsCreateChannel={setIsCreateChannel}\n          userInviteError={userInviteError}\n          setUserInviteError={setUserInviteError}\n          stateSB={stateSB}\n          setStateSB={setStateSB}\n          retrieveChannelUsers={retrieveChannelUsers}\n          channelMembers={channelMembers}\n          usersDisplayed={usersDisplayed}\n          userStatus={userStatus}\n          signOut={signOut}\n          setMobileOpen={setMobileOpen}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect  \n} from \"react-router-dom\";\nimport Home from '../Home'\nimport Chat from '../Chat'\nimport useLocalStorage from \"../Home/useLocalStorage\";\n\nconst Routes = () => {\n  const [userStatus] = useLocalStorage('status')\n\n    return (\n      <>\n      <Router>              \n           <Switch>           \n            <Route exact path=\"/\" component={()=> userStatus?.isLoggedIn ? <Redirect to='/chat'/> : <Home/>}/>                         \n            <Route exact path=\"/chat\" component={Chat}>\n              <Chat />\n            </Route>          \n          </Switch>       \n      </Router>\n      </>\n    );\n  }\n\nexport default Routes","import './App.css';\nimport Routes from './components/Routes'\n\n\nconst App = () => { \n\n  \n  return (\n    \n<Routes/>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}